/**
 * This class is generated by jOOQ
 */
package com.example.jooq.tables;


import com.example.jooq.Keys;
import com.example.jooq.Public;
import com.example.jooq.tables.records.PizzaRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Pizza extends TableImpl<PizzaRecord> {

    private static final long serialVersionUID = -1365319991;

    /**
     * The reference instance of <code>PUBLIC.PIZZA</code>
     */
    public static final Pizza PIZZA = new Pizza();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PizzaRecord> getRecordType() {
        return PizzaRecord.class;
    }

    /**
     * The column <code>PUBLIC.PIZZA.ID</code>.
     */
    public final TableField<PizzaRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_323849C2_C132_4586_A3D1_484C30570868)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>PUBLIC.PIZZA.NAME</code>.
     */
    public final TableField<PizzaRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>PUBLIC.PIZZA.PRICE</code>.
     */
    public final TableField<PizzaRecord, BigDecimal> PRICE = createField("PRICE", org.jooq.impl.SQLDataType.DECIMAL.precision(19, 2), this, "");

    /**
     * The column <code>PUBLIC.PIZZA.BASE_ID</code>.
     */
    public final TableField<PizzaRecord, Long> BASE_ID = createField("BASE_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>PUBLIC.PIZZA</code> table reference
     */
    public Pizza() {
        this("PIZZA", null);
    }

    /**
     * Create an aliased <code>PUBLIC.PIZZA</code> table reference
     */
    public Pizza(String alias) {
        this(alias, PIZZA);
    }

    private Pizza(String alias, Table<PizzaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Pizza(String alias, Table<PizzaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PizzaRecord, Long> getIdentity() {
        return Keys.IDENTITY_PIZZA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PizzaRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_4;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PizzaRecord>> getKeys() {
        return Arrays.<UniqueKey<PizzaRecord>>asList(Keys.CONSTRAINT_4);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PizzaRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PizzaRecord, ?>>asList(Keys.FKM6KAI6C5EVR38DUYFH06UE29U);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Pizza as(String alias) {
        return new Pizza(alias, this);
    }

    /**
     * Rename this table
     */
    public Pizza rename(String name) {
        return new Pizza(name, null);
    }
}
