/**
 * This class is generated by jOOQ
 */
package com.example.jooq.tables;


import com.example.jooq.Keys;
import com.example.jooq.Public;
import com.example.jooq.tables.records.PizzaToppingsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PizzaToppings extends TableImpl<PizzaToppingsRecord> {

    private static final long serialVersionUID = -52572549;

    /**
     * The reference instance of <code>PUBLIC.PIZZA_TOPPINGS</code>
     */
    public static final PizzaToppings PIZZA_TOPPINGS = new PizzaToppings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PizzaToppingsRecord> getRecordType() {
        return PizzaToppingsRecord.class;
    }

    /**
     * The column <code>PUBLIC.PIZZA_TOPPINGS.PIZZA_ID</code>.
     */
    public final TableField<PizzaToppingsRecord, Long> PIZZA_ID = createField("PIZZA_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.PIZZA_TOPPINGS.TOPPINGS_ID</code>.
     */
    public final TableField<PizzaToppingsRecord, Long> TOPPINGS_ID = createField("TOPPINGS_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.PIZZA_TOPPINGS</code> table reference
     */
    public PizzaToppings() {
        this("PIZZA_TOPPINGS", null);
    }

    /**
     * Create an aliased <code>PUBLIC.PIZZA_TOPPINGS</code> table reference
     */
    public PizzaToppings(String alias) {
        this(alias, PIZZA_TOPPINGS);
    }

    private PizzaToppings(String alias, Table<PizzaToppingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PizzaToppings(String alias, Table<PizzaToppingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PizzaToppingsRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_A;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PizzaToppingsRecord>> getKeys() {
        return Arrays.<UniqueKey<PizzaToppingsRecord>>asList(Keys.CONSTRAINT_A);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PizzaToppingsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PizzaToppingsRecord, ?>>asList(Keys.FK78L5QTFERC9QHFKKGYV99LMST, Keys.FK7TCTI2CXAU3CSVBUWXN0SCB93);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PizzaToppings as(String alias) {
        return new PizzaToppings(alias, this);
    }

    /**
     * Rename this table
     */
    public PizzaToppings rename(String name) {
        return new PizzaToppings(name, null);
    }
}
